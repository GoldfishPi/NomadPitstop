{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@agm/core/directives/info-window.js","webpack:///./node_modules/@agm/core/directives/info-window.d.ts.AgmInfoWindow.html","webpack:///./node_modules/@agm/core/directives/map.js","webpack:///./node_modules/@agm/core/directives/map.d.ts.AgmMap.html","webpack:///./node_modules/@agm/core/services/fit-bounds.js","webpack:///./node_modules/@agm/core/services/google-maps-api-wrapper.js","webpack:///./node_modules/@agm/core/services/managers/circle-manager.js","webpack:///./node_modules/@agm/core/services/managers/data-layer-manager.js","webpack:///./node_modules/@agm/core/services/managers/info-window-manager.js","webpack:///./node_modules/@agm/core/services/managers/kml-layer-manager.js","webpack:///./node_modules/@agm/core/services/managers/marker-manager.js","webpack:///./node_modules/@agm/core/services/managers/polygon-manager.js","webpack:///./node_modules/@agm/core/services/managers/polyline-manager.js","webpack:///./node_modules/@agm/core/services/managers/rectangle-manager.js","webpack:///./node_modules/@agm/core/services/maps-api-loader/maps-api-loader.js","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/adder/adder.component.html","webpack:///./src/app/components/adder/adder.component.ts","webpack:///./src/app/components/blogs/blog/blog.component.html","webpack:///./src/app/components/blogs/blog/blog.component.ts","webpack:///./src/app/components/blogs/blogs.component.html","webpack:///./src/app/components/blogs/blogs.component.ts","webpack:///./src/app/components/landing/landing.component.html","webpack:///./src/app/components/landing/landing.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/map/map.component.html","webpack:///./src/app/components/map/map.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/near/near.component.html","webpack:///./src/app/components/near/near.component.ts","webpack:///./src/app/components/near/nearcard/nearcard.component.html","webpack:///./src/app/components/near/nearcard/nearcard.component.ts","webpack:///./src/app/components/pitstop/pitstop.component.html","webpack:///./src/app/components/pitstop/pitstop.component.ts","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/social-share/social-share.component.html","webpack:///./src/app/components/social-share/social-share.component.ts","webpack:///./src/app/services/blog/blog.service.ts","webpack:///./src/app/services/pitstop/pitstop.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.server.ts","webpack:///external \"@agm/core/core.module\"","webpack:///external \"@agm/core/directives/info-window\"","webpack:///external \"@agm/core/directives/map\"","webpack:///external \"@agm/core/directives/marker\"","webpack:///external \"@agm/core/services/fit-bounds\"","webpack:///external \"@agm/core/services/google-maps-api-wrapper\"","webpack:///external \"@agm/core/services/managers/circle-manager\"","webpack:///external \"@agm/core/services/managers/data-layer-manager\"","webpack:///external \"@agm/core/services/managers/info-window-manager\"","webpack:///external \"@agm/core/services/managers/kml-layer-manager\"","webpack:///external \"@agm/core/services/managers/marker-manager\"","webpack:///external \"@agm/core/services/managers/polygon-manager\"","webpack:///external \"@agm/core/services/managers/polyline-manager\"","webpack:///external \"@agm/core/services/managers/rectangle-manager\"","webpack:///external \"@agm/core/services/maps-api-loader/lazy-maps-api-loader\"","webpack:///external \"@agm/core/services/maps-api-loader/maps-api-loader\"","webpack:///external \"@agm/core/utils/browser-globals\"","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@ng-toolkit/universal\"","webpack:///external \"@nguniversal/common\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"ngx-google-places-autocomplete\"","webpack:///external \"ngx-google-places-autocomplete/ngx-google-places-autocomplete.directive\"","webpack:///external \"ngx-google-places-autocomplete/ngx-google-places-autocomplete.module\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACN;AAC7E;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,iEAAiE,EAAE;AACtI,yCAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,8BAA8B,EAAE;AACrG;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,+CAA+C;AAChE;AACA;AACA;AACA,iBAAiB,gDAAgD;AACjE;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,wFAAiB,GAAG;AACpC,SAAS,OAAO,wDAAU,GAAG;AAC7B,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,6BAA6B,OAAO,oDAAM,EAAE;AAC5C;AACA;AACA,CAAC;AACwB;AACzB,uC;;;;;;;;;;;;;;;;;;;;;;;;;;wDCjJA,gHAAqC,IAC/B,eAAY;;;;;;;;;;;;;;;;;;ACDlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACR;AACP;AACM;AACG;AACT;AACE;AACE;AACG;AACE;AACnB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,mBAAmB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAoD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,0CAA0C,EAAE;AAC3E,kCAAkC,iCAAiC,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,uDAAuD,EAAE;AAC5H,yCAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,+BAA+B,EAAE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mEAAmE,iCAAiC,EAAE;AACtG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yEAAyE,uCAAuC,EAAE;AAClH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,qFAAqF,yBAAyB,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA,aAAa,wCAAwC;AACrD,aAAa,kDAAkD;AAC/D,aAAa,8CAA8C;AAC3D;AACA;AACA;AACA,6BAA6B,UAAU,mDAAmD;AAC1F;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,wBAAwB,sFAAoB,EAAE,+EAAa,EAAE,wFAAiB,EAAE,+EAAa,EAAE,qFAAgB;AAC/G,wBAAwB,mFAAe,EAAE,iFAAc,EAAE,oFAAe,EAAE,sFAAgB,EAAE,sFAAgB;AAC5G,wBAAwB,sEAAgB;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,8DAA8D,uBAAuB,wBAAwB,OAAO,wBAAwB,qBAAqB,OAAO;AACxK;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yCAAyC;AACzC,SAAS,OAAO,wDAAU,GAAG;AAC7B,SAAS,OAAO,sFAAoB,GAAG;AACvC,SAAS,OAAO,sEAAgB,GAAG;AACnC,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,uBAAuB,OAAO,mDAAK,2BAA2B;AAC9D,oCAAoC,OAAO,mDAAK,EAAE;AAClD,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,sCAAsC,OAAO,mDAAK,EAAE;AACpD,uBAAuB,OAAO,mDAAK,EAAE;AACrC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,mCAAmC,OAAO,mDAAK,EAAE;AACjD,wBAAwB,OAAO,mDAAK,EAAE;AACtC,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,2BAA2B,OAAO,mDAAK,EAAE;AACzC,kCAAkC,OAAO,mDAAK,EAAE;AAChD,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,sCAAsC,OAAO,mDAAK,EAAE;AACpD,uBAAuB,OAAO,mDAAK,EAAE;AACrC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,sBAAsB,OAAO,oDAAM,EAAE;AACrC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,yBAAyB,OAAO,oDAAM,EAAE;AACxC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,6BAA6B,OAAO,oDAAM,EAAE;AAC5C,kBAAkB,OAAO,oDAAM,EAAE;AACjC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA,CAAC;AACiB;AAClB,+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDCveI,gJAAqE,KACrE,wGAA6B,IAC3B,eAAY;;;;;;;;;;;;;;;;;;ACHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACS;AAC0B;AACZ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AAC6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAe;AAC3D,qCAAqC,oDAAe;AACpD,uBAAuB,iDAAI,qBAAqB,8DAAO,cAAc,gCAAgC,EAAE,GAAG,6DAAM,oCAAoC,gEAAS,kBAAkB,QAAQ,kDAAK,UAAU,EAAE,KAAK,0DAAG,6BAA6B,+CAA+C,EAAE,GAAG,kEAAW;AAC5S;AACA;AACA;AACA,8CAA8C,yBAAyB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,8EAAa,GAAG;AAChC,MAAM;AACN;AACA,CAAC;AAC2B;AAC5B,sC;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8BAA8B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,qCAAqC,uBAAuB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,yDAAyD,8BAA8B,2BAA2B,EAAE,EAAE,EAAE;AACxH,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8CAA8C,8BAA8B,EAAE;AAC9E;AACA,0DAA0D,uCAAuC,sBAAsB,EAAE,EAAE;AAC3H;AACA,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,8CAA8C,2BAA2B,EAAE;AAC3E;AACA;AACA,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,8CAA8C,8BAA8B,EAAE;AAC9E;AACA;AACA,8CAA8C,gCAAgC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gDAAgD,EAAE;AAC9F;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,8EAAa,GAAG;AAChC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC+B;AAChC,mD;;;;;;;;;;;;ACpMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAA8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4DAA4D,8BAA8B,EAAE;AAC5F;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA,4DAA4D,qBAAqB,8CAA8C,EAAE,EAAE;AACnI;AACA;AACA,4DAA4D,uCAAuC,EAAE;AACrG;AACA;AACA,4DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA,4DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,4DAA4D,mCAAmC,EAAE;AACjG;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,kEAAkE,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AACtI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AACwB;AACzB,0C;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACkC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kFAAkF,8BAA8B,EAAE;AAClH;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wEAAwE,8BAA8B,EAAE;AACxG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC2B;AAC5B,8C;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACiB;AACe;AACjB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gCAAgC,uCAAuC,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,4BAA4B,EAAE;AAChH,iBAAiB;AACjB;AACA,0EAA0E,oBAAoB,EAAE;AAChG,SAAS;AACT;AACA;AACA,oEAAoE,kBAAkB,EAAE;AACxF;AACA;AACA,oEAAoE,8BAA8B,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,SAAS,OAAO,6DAAa,GAAG;AAChC,MAAM;AACN;AACA,CAAC;AAC4B;AAC7B,+C;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACkC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mDAAmD,8BAA8B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC0B;AAC3B,6C;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACkC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,4DAA4D,uBAAuB,8CAA8C,EAAE,EAAE;AACrI;AACA;AACA,4DAA4D,iCAAiC,EAAE;AAC/F;AACA;AACA,4DAA4D,0BAA0B,EAAE;AACxF;AACA;AACA,4DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA,4DAA4D,kCAAkC,EAAE;AAChG;AACA;AACA,4DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,4DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,4DAA4D,mCAAmC,EAAE;AACjG;AACA;AACA,4DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,8CAA8C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AACwB;AACzB,0C;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qCAAqC,2BAA2B,EAAE,EAAE,EAAE;AAC1G;AACA;AACA,2DAA2D,uBAAuB,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AACyB;AAC1B,2C;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qCAAqC,iBAAiB,EAAE,EAAE,EAAE;AAChG;AACA;AACA,4DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC0B;AAC3B,4C;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kEAAkE,8BAA8B,EAAE;AAClG;AACA;AACA,kEAAkE,sBAAsB,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,+CAAU;AACzB;AACA;AACA,kEAAkE,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AACtI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Component, ElementRef, EventEmitter, Output, Input } from '@angular/core';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nvar infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmInfoWindow = /** @class */ (function () {\n    function AgmInfoWindow(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n           * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n           */\n        this.isOpen = false;\n        /**\n           * Emits an event when the info window is closed.\n           */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    AgmInfoWindow.prototype.ngOnInit = function () {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnChanges = /** @internal */\n    function (changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    };\n    AgmInfoWindow.prototype._registerEventListeners = function () {\n        var _this = this;\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n            _this.isOpen = false;\n            _this.infoWindowClose.emit();\n        });\n    };\n    AgmInfoWindow.prototype._updateOpenState = function () {\n        this.isOpen ? this.open() : this.close();\n    };\n    AgmInfoWindow.prototype._setInfoWindowOptions = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    };\n    /**\n     * Opens the info window.\n     */\n    /**\n       * Opens the info window.\n       */\n    AgmInfoWindow.prototype.open = /**\n       * Opens the info window.\n       */\n    function () { return this._infoWindowManager.open(this); };\n    /**\n     * Closes the info window.\n     */\n    /**\n       * Closes the info window.\n       */\n    AgmInfoWindow.prototype.close = /**\n       * Closes the info window.\n       */\n    function () {\n        var _this = this;\n        return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(); });\n    };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.id = /** @internal */\n    function () { return this._id; };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.toString = /** @internal */\n    function () { return 'AgmInfoWindow-' + this._id.toString(); };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnDestroy = /** @internal */\n    function () { this._infoWindowManager.deleteInfoWindow(this); };\n    AgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n    AgmInfoWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'agm-info-window',\n                    template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    AgmInfoWindow.ctorParameters = function () { return [\n        { type: InfoWindowManager, },\n        { type: ElementRef, },\n    ]; };\n    AgmInfoWindow.propDecorators = {\n        \"latitude\": [{ type: Input },],\n        \"longitude\": [{ type: Input },],\n        \"disableAutoPan\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"maxWidth\": [{ type: Input },],\n        \"isOpen\": [{ type: Input },],\n        \"infoWindowClose\": [{ type: Output },],\n    };\n    return AgmInfoWindow;\n}());\nexport { AgmInfoWindow };\n//# sourceMappingURL=info-window.js.map","<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  ","import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '../services/google-maps-api-wrapper';\nimport { CircleManager } from '../services/managers/circle-manager';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { PolygonManager } from '../services/managers/polygon-manager';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\nimport { FitBoundsService } from '../services/fit-bounds';\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMap = /** @class */ (function () {\n    function AgmMap(_elem, _mapsWrapper, _fitBoundsService) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n           * The longitude that defines the center of the map.\n           */\n        this.longitude = 0;\n        /**\n           * The latitude that defines the center of the map.\n           */\n        this.latitude = 0;\n        /**\n           * The zoom level of the map. The default zoom level is 8.\n           */\n        this.zoom = 8;\n        /**\n           * Enables/disables if map is draggable.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n           * Enables/disables zoom and center on double click. Enabled by default.\n           */\n        this.disableDoubleClickZoom = false;\n        /**\n           * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n           * value cannot get updated.\n           */\n        this.disableDefaultUI = false;\n        /**\n           * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n           */\n        this.scrollwheel = true;\n        /**\n           * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n           * enabled by default.\n           */\n        this.keyboardShortcuts = true;\n        /**\n           * The enabled/disabled state of the Zoom control.\n           */\n        this.zoomControl = true;\n        /**\n           * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n           * modes, these styles will only apply to labels and geometry.\n           */\n        this.styles = [];\n        /**\n           * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n           * used to\n           * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n           */\n        this.usePanning = false;\n        /**\n           * The initial enabled/disabled state of the Street View Pegman control.\n           * This control is part of the default UI, and should be set to false when displaying a map type\n           * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\n           */\n        this.streetViewControl = true;\n        /**\n           * Sets the viewport to contain the given bounds.\n           * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n           */\n        this.fitBounds = false;\n        /**\n           * The initial enabled/disabled state of the Scale control. This is disabled by default.\n           */\n        this.scaleControl = false;\n        /**\n           * The initial enabled/disabled state of the Map type control.\n           */\n        this.mapTypeControl = false;\n        /**\n           * The initial enabled/disabled state of the Pan control.\n           */\n        this.panControl = false;\n        /**\n           * The initial enabled/disabled state of the Rotate control.\n           */\n        this.rotateControl = false;\n        /**\n           * The initial enabled/disabled state of the Fullscreen control.\n           */\n        this.fullscreenControl = false;\n        /**\n           * The map mapTypeId. Defaults to 'roadmap'.\n           */\n        this.mapTypeId = 'roadmap';\n        /**\n           * When false, map icons are not clickable. A map icon represents a point of interest,\n           * also known as a POI. By default map icons are clickable.\n           */\n        this.clickableIcons = true;\n        /**\n           * This setting controls how gestures on the map are handled.\n           * Allowed values:\n           * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n           * - 'greedy'      (All touch gestures pan or zoom the map.)\n           * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n           * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n           */\n        this.gestureHandling = 'auto';\n        this._observableSubscriptions = [];\n        /**\n           * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n           * marker or infoWindow).\n           */\n        this.mapClick = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n           * on a marker or infoWindow).\n           */\n        this.mapRightClick = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n           * on a marker or infoWindow).\n           */\n        this.mapDblClick = new EventEmitter();\n        /**\n           * This event emitter is fired when the map center changes.\n           */\n        this.centerChange = new EventEmitter();\n        /**\n           * This event is fired when the viewport bounds have changed.\n           */\n        this.boundsChange = new EventEmitter();\n        /**\n           * This event is fired when the mapTypeId property changes.\n           */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n           * This event is fired when the map becomes idle after panning or zooming.\n           */\n        this.idle = new EventEmitter();\n        /**\n           * This event is fired when the zoom level has changed.\n           */\n        this.zoomChange = new EventEmitter();\n        /**\n           * This event is fired when the google map is fully initialized.\n           * You get the google.maps.Map instance as a result of this EventEmitter.\n           */\n        this.mapReady = new EventEmitter();\n    }\n    /** @internal */\n    /** @internal */\n    AgmMap.prototype.ngOnInit = /** @internal */\n    function () {\n        // todo: this should be solved with a new component and a viewChild decorator\n        var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    };\n    AgmMap.prototype._initMapInstance = function (el) {\n        var _this = this;\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling\n        })\n            .then(function () { return _this._mapsWrapper.getNativeMap(); })\n            .then(function (map) { return _this.mapReady.emit(map); });\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleIdleEvent();\n    };\n    /** @internal */\n    /** @internal */\n    AgmMap.prototype.ngOnDestroy = /** @internal */\n    function () {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    };\n    /* @internal */\n    /* @internal */\n    AgmMap.prototype.ngOnChanges = /* @internal */\n    function (changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    };\n    AgmMap.prototype._updateMapOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmMap._mapOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    };\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    /**\n       * Triggers a resize event on the google map instance.\n       * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n       * Returns a promise that gets resolved after the event was triggered.\n       */\n    AgmMap.prototype.triggerResize = /**\n       * Triggers a resize event on the google map instance.\n       * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n       * Returns a promise that gets resolved after the event was triggered.\n       */\n    function (recenter) {\n        var _this = this;\n        if (recenter === void 0) { recenter = true; }\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                return _this._mapsWrapper.triggerMapEvent('resize').then(function () {\n                    if (recenter) {\n                        _this.fitBounds != null ? _this._fitBounds() : _this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    };\n    AgmMap.prototype._updatePosition = function (changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    };\n    AgmMap.prototype._setCenter = function () {\n        var newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    };\n    AgmMap.prototype._fitBounds = function () {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds);\n        }\n    };\n    AgmMap.prototype._subscribeToFitBoundsUpdates = function () {\n        var _this = this;\n        this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(function (b) { return _this._updateBounds(b); });\n    };\n    AgmMap.prototype._updateBounds = function (bounds) {\n        if (this._isLatLngBoundsLiteral(bounds)) {\n            var newBounds = google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (bounds.isEmpty()) {\n            return;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds);\n    };\n    AgmMap.prototype._isLatLngBoundsLiteral = function (bounds) {\n        return bounds.extend === undefined;\n    };\n    AgmMap.prototype._handleMapCenterChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n            _this._mapsWrapper.getCenter().then(function (center) {\n                _this.latitude = center.lat();\n                _this.longitude = center.lng();\n                _this.centerChange.emit({ lat: _this.latitude, lng: _this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleBoundsChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n            _this._mapsWrapper.getBounds().then(function (bounds) { _this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapTypeIdChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(function () {\n            _this._mapsWrapper.getMapTypeId().then(function (mapTypeId) { _this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapZoomChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n            _this._mapsWrapper.getZoom().then(function (z) {\n                _this.zoom = z;\n                _this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleIdleEvent = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () { _this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapMouseEvents = function () {\n        var _this = this;\n        var events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach(function (e) {\n            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n                var value = { coords: { lat: event.latLng.lat(), lng: event.latLng.lng() } };\n                e.emitter.emit(value);\n            });\n            _this._observableSubscriptions.push(s);\n        });\n    };\n    /**\n       * Map option attributes that can change over time\n       */\n    AgmMap._mapOptionsAttributes = [\n        'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n        'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n        'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n        'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n        'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n        'mapTypeId', 'clickableIcons', 'gestureHandling'\n    ];\n    AgmMap.decorators = [\n        { type: Component, args: [{\n                    selector: 'agm-map',\n                    providers: [\n                        GoogleMapsAPIWrapper, MarkerManager, InfoWindowManager, CircleManager, RectangleManager,\n                        PolylineManager, PolygonManager, KmlLayerManager, DataLayerManager, DataLayerManager,\n                        FitBoundsService\n                    ],\n                    host: {\n                        // todo: deprecated - we will remove it with the next version\n                        '[class.sebm-google-map-container]': 'true'\n                    },\n                    styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"],\n                    template: \"\\n    <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\\n    <div class='agm-map-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    AgmMap.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: GoogleMapsAPIWrapper, },\n        { type: FitBoundsService, },\n    ]; };\n    AgmMap.propDecorators = {\n        \"longitude\": [{ type: Input },],\n        \"latitude\": [{ type: Input },],\n        \"zoom\": [{ type: Input },],\n        \"minZoom\": [{ type: Input },],\n        \"maxZoom\": [{ type: Input },],\n        \"draggable\": [{ type: Input, args: ['mapDraggable',] },],\n        \"disableDoubleClickZoom\": [{ type: Input },],\n        \"disableDefaultUI\": [{ type: Input },],\n        \"scrollwheel\": [{ type: Input },],\n        \"backgroundColor\": [{ type: Input },],\n        \"draggableCursor\": [{ type: Input },],\n        \"draggingCursor\": [{ type: Input },],\n        \"keyboardShortcuts\": [{ type: Input },],\n        \"zoomControl\": [{ type: Input },],\n        \"zoomControlOptions\": [{ type: Input },],\n        \"styles\": [{ type: Input },],\n        \"usePanning\": [{ type: Input },],\n        \"streetViewControl\": [{ type: Input },],\n        \"streetViewControlOptions\": [{ type: Input },],\n        \"fitBounds\": [{ type: Input },],\n        \"scaleControl\": [{ type: Input },],\n        \"scaleControlOptions\": [{ type: Input },],\n        \"mapTypeControl\": [{ type: Input },],\n        \"mapTypeControlOptions\": [{ type: Input },],\n        \"panControl\": [{ type: Input },],\n        \"panControlOptions\": [{ type: Input },],\n        \"rotateControl\": [{ type: Input },],\n        \"rotateControlOptions\": [{ type: Input },],\n        \"fullscreenControl\": [{ type: Input },],\n        \"fullscreenControlOptions\": [{ type: Input },],\n        \"mapTypeId\": [{ type: Input },],\n        \"clickableIcons\": [{ type: Input },],\n        \"gestureHandling\": [{ type: Input },],\n        \"mapClick\": [{ type: Output },],\n        \"mapRightClick\": [{ type: Output },],\n        \"mapDblClick\": [{ type: Output },],\n        \"centerChange\": [{ type: Output },],\n        \"boundsChange\": [{ type: Output },],\n        \"mapTypeIdChange\": [{ type: Output },],\n        \"idle\": [{ type: Output },],\n        \"zoomChange\": [{ type: Output },],\n        \"mapReady\": [{ type: Output },],\n    };\n    return AgmMap;\n}());\nexport { AgmMap };\n//# sourceMappingURL=map.js.map","\n    <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n    <div class='agm-map-content'>\n      <ng-content></ng-content>\n    </div>\n  ","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, timer } from 'rxjs';\nimport { flatMap, map, sample, switchMap, shareReplay } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nvar /**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nFitBoundsAccessor = /** @class */ (function () {\n    function FitBoundsAccessor() {\n    }\n    return FitBoundsAccessor;\n}());\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport { FitBoundsAccessor };\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nvar FitBoundsService = /** @class */ (function () {\n    function FitBoundsService(loader) {\n        var _this = this;\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(function () { return _this._includeInBounds$; }), sample(this._boundsChangeSampleTime$.pipe(switchMap(function (time) { return timer(0, time); }))), map(function (includeInBounds) { return _this._generateBounds(includeInBounds); }), shareReplay(1));\n    }\n    FitBoundsService.prototype._generateBounds = function (includeInBounds) {\n        var bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(function (b) { return bounds.extend(b); });\n        return bounds;\n    };\n    FitBoundsService.prototype.addToBounds = function (latLng) {\n        var id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        var map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    };\n    FitBoundsService.prototype.removeFromBounds = function (latLng) {\n        var map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    };\n    FitBoundsService.prototype.changeFitBoundsChangeSampleTime = function (timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    };\n    FitBoundsService.prototype.getBounds$ = function () {\n        return this.bounds$;\n    };\n    FitBoundsService.prototype._createIdentifier = function (latLng) {\n        return latLng.lat + \"+\" + latLng.lng;\n    };\n    FitBoundsService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    FitBoundsService.ctorParameters = function () { return [\n        { type: MapsAPILoader, },\n    ]; };\n    return FitBoundsService;\n}());\nexport { FitBoundsService };\n//# sourceMappingURL=fit-bounds.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nvar GoogleMapsAPIWrapper = /** @class */ (function () {\n    function GoogleMapsAPIWrapper(_loader, _zone) {\n        var _this = this;\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise(function (resolve) { _this._mapResolver = resolve; });\n    }\n    GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._loader.load().then(function () {\n                var map = new google.maps.Map(el, mapOptions);\n                _this._mapResolver(map);\n                return;\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {\n        this._map.then(function (m) { m.setOptions(options); });\n    };\n    /**\n     * Creates a google map marker with the map context\n     */\n    /**\n       * Creates a google map marker with the map context\n       */\n    GoogleMapsAPIWrapper.prototype.createMarker = /**\n       * Creates a google map marker with the map context\n       */\n    function (options, addToMap) {\n        if (options === void 0) { options = {}; }\n        if (addToMap === void 0) { addToMap = true; }\n        return this._map.then(function (map) {\n            if (addToMap) {\n                options.map = map;\n            }\n            return new google.maps.Marker(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {\n        return this._map.then(function () { return new google.maps.InfoWindow(options); });\n    };\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    /**\n       * Creates a google.map.Circle for the current map.\n       */\n    GoogleMapsAPIWrapper.prototype.createCircle = /**\n       * Creates a google.map.Circle for the current map.\n       */\n    function (options) {\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Circle(options);\n        });\n    };\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    /**\n       * Creates a google.map.Rectangle for the current map.\n       */\n    GoogleMapsAPIWrapper.prototype.createRectangle = /**\n       * Creates a google.map.Rectangle for the current map.\n       */\n    function (options) {\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Rectangle(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var line = new google.maps.Polyline(options);\n            line.setMap(map);\n            return line;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var polygon = new google.maps.Polygon(options);\n            polygon.setMap(map);\n            return polygon;\n        });\n    };\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    /**\n       * Creates a new google.map.Data layer for the current map\n       */\n    GoogleMapsAPIWrapper.prototype.createDataLayer = /**\n       * Creates a new google.map.Data layer for the current map\n       */\n    function (options) {\n        return this._map.then(function (m) {\n            var data = new google.maps.Data(options);\n            data.setMap(m);\n            return data;\n        });\n    };\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    /**\n       * Determines if given coordinates are insite a Polygon path.\n       */\n    GoogleMapsAPIWrapper.prototype.containsLocation = /**\n       * Determines if given coordinates are insite a Polygon path.\n       */\n    function (latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    };\n    GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._map.then(function (m) {\n                m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.clearInstanceListeners = function () {\n        this._map.then(function (map) {\n            google.maps.event.clearInstanceListeners(map);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {\n        return this._map.then(function (map) { return map.setCenter(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.getZoom = function () { return this._map.then(function (map) { return map.getZoom(); }); };\n    GoogleMapsAPIWrapper.prototype.getBounds = function () {\n        return this._map.then(function (map) { return map.getBounds(); });\n    };\n    GoogleMapsAPIWrapper.prototype.getMapTypeId = function () {\n        return this._map.then(function (map) { return map.getMapTypeId(); });\n    };\n    GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {\n        return this._map.then(function (map) { return map.setZoom(zoom); });\n    };\n    GoogleMapsAPIWrapper.prototype.getCenter = function () {\n        return this._map.then(function (map) { return map.getCenter(); });\n    };\n    GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {\n        return this._map.then(function (map) { return map.panTo(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.panBy = function (x, y) {\n        return this._map.then(function (map) { return map.panBy(x, y); });\n    };\n    GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng) {\n        return this._map.then(function (map) { return map.fitBounds(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng) {\n        return this._map.then(function (map) { return map.panToBounds(latLng); });\n    };\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    /**\n       * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n       */\n    GoogleMapsAPIWrapper.prototype.getNativeMap = /**\n       * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n       */\n    function () { return this._map; };\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    /**\n       * Triggers the given event name on the map instance.\n       */\n    GoogleMapsAPIWrapper.prototype.triggerMapEvent = /**\n       * Triggers the given event name on the map instance.\n       */\n    function (eventName) {\n        return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });\n    };\n    GoogleMapsAPIWrapper.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    GoogleMapsAPIWrapper.ctorParameters = function () { return [\n        { type: MapsAPILoader, },\n        { type: NgZone, },\n    ]; };\n    return GoogleMapsAPIWrapper;\n}());\nexport { GoogleMapsAPIWrapper };\n//# sourceMappingURL=google-maps-api-wrapper.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar CircleManager = /** @class */ (function () {\n    function CircleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    CircleManager.prototype.addCircle = function (circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex\n        }));\n    };\n    /**\n     * Removes the given circle from the map.\n     */\n    /**\n       * Removes the given circle from the map.\n       */\n    CircleManager.prototype.removeCircle = /**\n       * Removes the given circle from the map.\n       */\n    function (circle) {\n        var _this = this;\n        return this._circles.get(circle).then(function (c) {\n            c.setMap(null);\n            _this._circles.delete(circle);\n        });\n    };\n    CircleManager.prototype.setOptions = function (circle, options) {\n        return this._circles.get(circle).then(function (c) { return c.setOptions(options); });\n    };\n    CircleManager.prototype.getBounds = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getBounds(); });\n    };\n    CircleManager.prototype.getCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getCenter(); });\n    };\n    CircleManager.prototype.getRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getRadius(); });\n    };\n    CircleManager.prototype.setCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    };\n    CircleManager.prototype.setEditable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setEditable(circle.editable); });\n    };\n    CircleManager.prototype.setDraggable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setDraggable(circle.draggable); });\n    };\n    CircleManager.prototype.setVisible = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setVisible(circle.visible); });\n    };\n    CircleManager.prototype.setRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setRadius(circle.radius); });\n    };\n    CircleManager.prototype.createEventObservable = function (eventName, circle) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var listener = null;\n            _this._circles.get(circle).then(function (c) {\n                listener = c.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    CircleManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    CircleManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return CircleManager;\n}());\nexport { CircleManager };\n//# sourceMappingURL=circle-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nvar DataLayerManager = /** @class */ (function () {\n    function DataLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    /**\n       * Adds a new Data Layer to the map.\n       */\n    DataLayerManager.prototype.addDataLayer = /**\n       * Adds a new Data Layer to the map.\n       */\n    function (layer) {\n        var _this = this;\n        var newLayer = this._wrapper.createDataLayer({\n            style: layer.style\n        })\n            .then(function (d) {\n            if (layer.geoJson) {\n                _this.getDataFeatures(d, layer.geoJson).then(function (features) { return d.features = features; });\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    };\n    DataLayerManager.prototype.deleteDataLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    DataLayerManager.prototype.updateGeoJson = function (layer, geoJson) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            _this.getDataFeatures(l, geoJson).then(function (features) { return l.features = features; });\n        });\n    };\n    DataLayerManager.prototype.setDataOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    /**\n       * Creates a Google Maps event listener for the given DataLayer as an Observable\n       */\n    DataLayerManager.prototype.createEventObservable = /**\n       * Creates a Google Maps event listener for the given DataLayer as an Observable\n       */\n    function (eventName, layer) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._layers.get(layer).then(function (d) {\n                d.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    /**\n       * Extract features from a geoJson using google.maps Data Class\n       * @param d : google.maps.Data class instance\n       * @param geoJson : url or geojson object\n       */\n    DataLayerManager.prototype.getDataFeatures = /**\n       * Extract features from a geoJson using google.maps Data Class\n       * @param d : google.maps.Data class instance\n       * @param geoJson : url or geojson object\n       */\n    function (d, geoJson) {\n        return new Promise(function (resolve, reject) {\n            if (typeof geoJson === 'object') {\n                try {\n                    var features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(\"Impossible to extract features from geoJson: wrong argument type\");\n            }\n        });\n    };\n    DataLayerManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    DataLayerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return DataLayerManager;\n}());\nexport { DataLayerManager };\n//# sourceMappingURL=data-layer-manager.js.map","import { Observable } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { MarkerManager } from './marker-manager';\nvar InfoWindowManager = /** @class */ (function () {\n    function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {\n        var _this = this;\n        var iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then(function (i) {\n            return _this._zone.run(function () {\n                i.close();\n                _this._infoWindows.delete(infoWindow);\n            });\n        });\n    };\n    InfoWindowManager.prototype.setPosition = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (i) {\n            return i.setPosition({\n                lat: infoWindow.latitude,\n                lng: infoWindow.longitude\n            });\n        });\n    };\n    InfoWindowManager.prototype.setZIndex = function (infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then(function (i) { return i.setZIndex(infoWindow.zIndex); });\n    };\n    InfoWindowManager.prototype.open = function (infoWindow) {\n        var _this = this;\n        return this._infoWindows.get(infoWindow).then(function (w) {\n            if (infoWindow.hostMarker != null) {\n                return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n                    return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });\n                });\n            }\n            return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });\n        });\n    };\n    InfoWindowManager.prototype.close = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });\n    };\n    InfoWindowManager.prototype.setOptions = function (infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });\n    };\n    InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {\n        var options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    };\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    /**\n        * Creates a Google Maps event listener for the given InfoWindow as an Observable\n        */\n    InfoWindowManager.prototype.createEventObservable = /**\n        * Creates a Google Maps event listener for the given InfoWindow as an Observable\n        */\n    function (eventName, infoWindow) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._infoWindows.get(infoWindow).then(function (i) {\n                i.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    InfoWindowManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    InfoWindowManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n        { type: MarkerManager, },\n    ]; };\n    return InfoWindowManager;\n}());\nexport { InfoWindowManager };\n//# sourceMappingURL=info-window-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nvar KmlLayerManager = /** @class */ (function () {\n    function KmlLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    /**\n       * Adds a new KML Layer to the map.\n       */\n    KmlLayerManager.prototype.addKmlLayer = /**\n       * Adds a new KML Layer to the map.\n       */\n    function (layer) {\n        var newLayer = this._wrapper.getNativeMap().then(function (m) {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex\n            });\n        });\n        this._layers.set(layer, newLayer);\n    };\n    KmlLayerManager.prototype.setOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) { return l.setOptions(options); });\n    };\n    KmlLayerManager.prototype.deleteKmlLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    /**\n       * Creates a Google Maps event listener for the given KmlLayer as an Observable\n       */\n    KmlLayerManager.prototype.createEventObservable = /**\n       * Creates a Google Maps event listener for the given KmlLayer as an Observable\n       */\n    function (eventName, layer) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._layers.get(layer).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    KmlLayerManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    KmlLayerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return KmlLayerManager;\n}());\nexport { KmlLayerManager };\n//# sourceMappingURL=kml-layer-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nvar MarkerManager = /** @class */ (function () {\n    function MarkerManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    MarkerManager.prototype.deleteMarker = function (marker) {\n        var _this = this;\n        var m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then(function (m) {\n            return _this._zone.run(function () {\n                m.setMap(null);\n                _this._markers.delete(marker);\n            });\n        });\n    };\n    MarkerManager.prototype.updateMarkerPosition = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });\n    };\n    MarkerManager.prototype.updateTitle = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });\n    };\n    MarkerManager.prototype.updateLabel = function (marker) {\n        return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });\n    };\n    MarkerManager.prototype.updateDraggable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });\n    };\n    MarkerManager.prototype.updateIcon = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });\n    };\n    MarkerManager.prototype.updateOpacity = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });\n    };\n    MarkerManager.prototype.updateVisible = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });\n    };\n    MarkerManager.prototype.updateZIndex = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });\n    };\n    MarkerManager.prototype.updateClickable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setClickable(marker.clickable); });\n    };\n    MarkerManager.prototype.updateAnimation = function (marker) {\n        return this._markers.get(marker).then(function (m) {\n            if (typeof marker.animation === 'string') {\n                m.setAnimation(google.maps.Animation[marker.animation]);\n            }\n            else {\n                m.setAnimation(marker.animation);\n            }\n        });\n    };\n    MarkerManager.prototype.addMarker = function (marker) {\n        var markerPromise = this._mapsWrapper.createMarker({\n            position: { lat: marker.latitude, lng: marker.longitude },\n            label: marker.label,\n            draggable: marker.draggable,\n            icon: marker.iconUrl,\n            opacity: marker.opacity,\n            visible: marker.visible,\n            zIndex: marker.zIndex,\n            title: marker.title,\n            clickable: marker.clickable,\n            animation: (typeof marker.animation === 'string') ? google.maps.Animation[marker.animation] : marker.animation\n        });\n        this._markers.set(marker, markerPromise);\n    };\n    MarkerManager.prototype.getNativeMarker = function (marker) {\n        return this._markers.get(marker);\n    };\n    MarkerManager.prototype.createEventObservable = function (eventName, marker) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._markers.get(marker).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    MarkerManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    MarkerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return MarkerManager;\n}());\nexport { MarkerManager };\n//# sourceMappingURL=marker-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar PolygonManager = /** @class */ (function () {\n    function PolygonManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    PolygonManager.prototype.addPolygon = function (path) {\n        var polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    };\n    PolygonManager.prototype.updatePolygon = function (polygon) {\n        var _this = this;\n        var m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPaths(polygon.paths); }); });\n    };\n    PolygonManager.prototype.setPolygonOptions = function (path, options) {\n        return this._polygons.get(path).then(function (l) { l.setOptions(options); });\n    };\n    PolygonManager.prototype.deletePolygon = function (paths) {\n        var _this = this;\n        var m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polygons.delete(paths);\n            });\n        });\n    };\n    PolygonManager.prototype.createEventObservable = function (eventName, path) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._polygons.get(path).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolygonManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PolygonManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return PolygonManager;\n}());\nexport { PolygonManager };\n//# sourceMappingURL=polygon-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar PolylineManager = /** @class */ (function () {\n    function PolylineManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    PolylineManager._convertPoints = function (line) {\n        var path = line._getPoints().map(function (point) {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    };\n    PolylineManager.prototype.addPolyline = function (line) {\n        var path = PolylineManager._convertPoints(line);\n        var polylinePromise = this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path\n        });\n        this._polylines.set(line, polylinePromise);\n    };\n    PolylineManager.prototype.updatePolylinePoints = function (line) {\n        var _this = this;\n        var path = PolylineManager._convertPoints(line);\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPath(path); }); });\n    };\n    PolylineManager.prototype.setPolylineOptions = function (line, options) {\n        return this._polylines.get(line).then(function (l) { l.setOptions(options); });\n    };\n    PolylineManager.prototype.deletePolyline = function (line) {\n        var _this = this;\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polylines.delete(line);\n            });\n        });\n    };\n    PolylineManager.prototype.createEventObservable = function (eventName, line) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._polylines.get(line).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolylineManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PolylineManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return PolylineManager;\n}());\nexport { PolylineManager };\n//# sourceMappingURL=polyline-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar RectangleManager = /** @class */ (function () {\n    function RectangleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    RectangleManager.prototype.addRectangle = function (rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex\n        }));\n    };\n    /**\n     * Removes the given rectangle from the map.\n     */\n    /**\n       * Removes the given rectangle from the map.\n       */\n    RectangleManager.prototype.removeRectangle = /**\n       * Removes the given rectangle from the map.\n       */\n    function (rectangle) {\n        var _this = this;\n        return this._rectangles.get(rectangle).then(function (r) {\n            r.setMap(null);\n            _this._rectangles.delete(rectangle);\n        });\n    };\n    RectangleManager.prototype.setOptions = function (rectangle, options) {\n        return this._rectangles.get(rectangle).then(function (r) { return r.setOptions(options); });\n    };\n    RectangleManager.prototype.getBounds = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) { return r.getBounds(); });\n    };\n    RectangleManager.prototype.setBounds = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west\n            });\n        });\n    };\n    RectangleManager.prototype.setEditable = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setEditable(rectangle.editable);\n        });\n    };\n    RectangleManager.prototype.setDraggable = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setDraggable(rectangle.draggable);\n        });\n    };\n    RectangleManager.prototype.setVisible = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setVisible(rectangle.visible);\n        });\n    };\n    RectangleManager.prototype.createEventObservable = function (eventName, rectangle) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            var listener = null;\n            _this._rectangles.get(rectangle).then(function (r) {\n                listener = r.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    RectangleManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    RectangleManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return RectangleManager;\n}());\nexport { RectangleManager };\n//# sourceMappingURL=rectangle-manager.js.map","import { Injectable } from '@angular/core';\nvar MapsAPILoader = /** @class */ (function () {\n    function MapsAPILoader() {\n    }\n    MapsAPILoader.decorators = [\n        { type: Injectable },\n    ];\n    return MapsAPILoader;\n}());\nexport { MapsAPILoader };\n//# sourceMappingURL=maps-api-loader.js.map","<router-outlet></router-outlet>","<app-navbar></app-navbar>\r\n<router-outlet #routerOutlet=\"outlet\"></router-outlet>\r\n","import { WINDOW } from '@ng-toolkit/universal';\r\nimport { Component, Inject, AfterViewInit, OnInit } from '@angular/core';\r\nimport {\r\n    trigger,\r\n    transition,\r\n    group,\r\n    query,\r\n    style,\r\n    animate\r\n} from '@angular/animations';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { environment } from '../environments/environment'\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.less'],\r\n    animations: [\r\n        trigger('routeAnimation', [\r\n            transition('1 => 2, 2 => 3', [\r\n                style({ height: '!' }),\r\n                query(':enter', style({ transform: 'translateX(100%)' })),\r\n                query(\r\n                    ':enter, :leave',\r\n                    style({ position: 'absolute', top: 0, left: 0, right: 0 })\r\n                ),\r\n                // animate the leave page away\r\n                group([\r\n                    query(':leave', [\r\n                        animate(\r\n                            '0.3s cubic-bezier(.35,0,.25,1)',\r\n                            style({ transform: 'translateX(-100%)' })\r\n                        )\r\n                    ]),\r\n                    // and now reveal the enter\r\n                    query(\r\n                        ':enter',\r\n                        animate(\r\n                            '0.3s cubic-bezier(.35,0,.25,1)',\r\n                            style({ transform: 'translateX(0)' })\r\n                        )\r\n                    )\r\n                ])\r\n            ]),\r\n            transition('3 => 2, 2 => 1', [\r\n                style({ height: '!' }),\r\n                query(':enter', style({ transform: 'translateX(-100%)' })),\r\n                query(\r\n                    ':enter, :leave',\r\n                    style({ position: 'absolute', top: 0, left: 0, right: 0 })\r\n                ),\r\n                // animate the leave page away\r\n                group([\r\n                    query(':leave', [\r\n                        animate(\r\n                            '0.3s cubic-bezier(.35,0,.25,1)',\r\n                            style({ transform: 'translateX(100%)' })\r\n                        )\r\n                    ]),\r\n                    // and now reveal the enter\r\n                    query(\r\n                        ':enter',\r\n                        animate(\r\n                            '0.3s cubic-bezier(.35,0,.25,1)',\r\n                            style({ transform: 'translateX(0)' })\r\n                        )\r\n                    )\r\n                ])\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n    ngOnInit(): void {\r\n        this.router.events.subscribe(event => {\r\n            if (!environment.production) return;\r\n            if (!window) return;\r\n            if (event instanceof NavigationEnd) {\r\n                (<any>window).ga('set', 'page', event.urlAfterRedirects);\r\n                (<any>window).ga('send', 'pageview');\r\n            }\r\n        });\r\n    }\r\n    constructor(\r\n        @Inject(WINDOW) private window: Window,\r\n        private router: Router\r\n    ) {}\r\n\r\n    getDepth(outlet) {\r\n        return outlet.activatedRouteData['depth'];\r\n    }\r\n}\r\n","import { NgtUniversalModule } from '@ng-toolkit/universal';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TransferHttpCacheModule } from '@nguniversal/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PitstopComponent } from './components/pitstop/pitstop.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AdderComponent } from './components/adder/adder.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { BlogsComponent } from './components/blogs/blogs.component';\r\nimport { BlogComponent } from './components/blogs/blog/blog.component';\r\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\r\nimport { NearComponent } from './components/near/near.component';\r\nimport { NearcardComponent } from './components/near/nearcard/nearcard.component';\r\nimport { PitstopService } from './services/pitstop/pitstop.service';\r\nimport { LandingComponent } from './components/landing/landing.component';\r\nimport { BlogService } from './services/blog/blog.service';\r\nimport { SocialShareComponent } from './components/social-share/social-share.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: LandingComponent, data: { depth: 1 } },\r\n    { path: 'map', component: MapComponent, data: { depth: 1 } },\r\n    { path: 'login', component: LoginComponent, data: { depth: 2 } },\r\n    { path: 'signup', component: SignupComponent, data: { depth: 3 } },\r\n    { path: 'blog', component: BlogsComponent },\r\n    { path: 'blog/:id', component: BlogComponent },\r\n    { path: 'pitstops/map/:id', component: MapComponent },\r\n    { path: 'nearme', component: NearComponent },\r\n    { path: 'about', component: AboutComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        PitstopComponent,\r\n        NavbarComponent,\r\n        AdderComponent,\r\n        MapComponent,\r\n        LoginComponent,\r\n        SignupComponent,\r\n        BlogsComponent,\r\n        BlogComponent,\r\n        NearComponent,\r\n        NearcardComponent,\r\n        LandingComponent,\r\n        SocialShareComponent,\r\n        AboutComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        NgtUniversalModule,\r\n\r\n        TransferHttpCacheModule,\r\n        HttpClientModule,\r\n\r\n        CommonModule,\r\n        NgtUniversalModule,\r\n\r\n        TransferHttpCacheModule,\r\n        HttpClientModule,\r\n\r\n        // .withServerTransition({ appId: 'nomadpitstops' }),\r\n        FormsModule,\r\n        HttpClientModule,\r\n        RouterModule.forRoot(\r\n            appRoutes\r\n            //   { enableTracing: true }\r\n        ),\r\n        AgmCoreModule.forRoot({\r\n            apiKey: 'AIzaSyBl8LKxRF1gdmnZjW5NHf3DEHcGCa7AVzY'\r\n        }),\r\n        // JwtModule.forRoot({\r\n        //     config: {\r\n        //         tokenGetter: tokenGetter,\r\n        //         whitelistedDomains: ['localhost:3001'],\r\n        //         blacklistedRoutes: ['localhost:3001/auth/']\r\n        //     }\r\n        // }),\r\n        BrowserAnimationsModule,\r\n        GooglePlaceModule\r\n    ],\r\n    providers: [PitstopService, BlogService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\nimport {NgModule} from '@angular/core';\n    import {ServerModule, ServerTransferStateModule} from '@angular/platform-server';\n    import {ModuleMapLoaderModule} from '@nguniversal/module-map-ngfactory-loader';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { NoopAnimationsModule } from '@angular/platform-browser/animations';\n    \n    @NgModule({\n bootstrap: [AppComponent],\n\n        imports:[\n BrowserModule.withServerTransition({appId: 'app-root'}),\n \n AppModule,\n \n            ServerModule,\n            NoopAnimationsModule,\n            ModuleMapLoaderModule,\n            ServerTransferStateModule, // comment\n        ]\n    })\n    export class AppServerModule {}\n    ","<div class=\"main\">\n    <h1 class=\"__text-heading\">What is Nomad Pit Stops?</h1>\n    <p class=\"__text\">\n        Nomad Pit Stops was created with the sole purpose of sharing amazing\n        places to work remote across the globe. Weather you are a full time\n        traveling digital nomad or a seasonal virtual vagabond we sincerely\n        believe that you will find something for you here. Check out our map\n        <a href=\"/map\">Map</a> to see pit stops near you or to seek out the next coffee shop to\n        camp out at on your next adventure â . Make sure you stop\n        by our <a routerLink=\"/blog\">blog</a> to see what adventures we are going on and maybe\n        get inspired to skp the office the next couple of weeks ðï¸ \n    </p>\n    <p class=\"__text\">Happy Adventures!</p>\n    <p class=\"__text\">NPS Team</p>\n    <!-- <h2 class=\"__text-heading\">Why do you request my location?</h2> -->\n    <h2 class=\"__text-heading\">Credits</h2>\n    <div class=\"__text\">\n        Icons made by\n        <a href=\"https://www.freepik.com/\" title=\"Freepik\">Freepik</a> from\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"\n            >www.flaticon.com</a\n        >\n        is licensed by\n        <a\n            href=\"http://creativecommons.org/licenses/by/3.0/\"\n            title=\"Creative Commons BY 3.0\"\n            target=\"_blank\"\n            >CC 3.0 BY</a\n        >\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.less']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"adder {{modifier}} themed-text\">\n    <div class=\"icon\" (click)=\"toggleAdder($event)\">{{ adderIcon }}</div>\n    <div *ngIf=\"open\" class=\"content\">\n        <div *ngIf=\"!loggedIn; else: loggedIn\" class=\"form\">\n            <button href=\"\" class=\"button primary\" (click)=\"onLogin()\">\n                Log In\n            </button>\n            <button class=\"button secoundary\" (click)=\"onSignup()\">\n                Sign Up\n            </button>\n        </div>\n        <ng-template #loggedIn>\n            <div *ngIf=\"!point; else: hasPoint\">Select a point</div>\n            <ng-template #hasPoint>\n                <button\n                    *ngIf=\"!expanded; else: isExpanded\"\n                    class=\"button primary\"\n                    (click)=\"expandAdder($event)\"\n                >\n                    Add Pitstop\n                </button>\n                <ng-template #isExpanded>\n                    <form (ngSubmit)=\"onAddPitstop()\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Pitstop Name\"\n                            [(ngModel)]=\"pitstopName\"\n                            name=\"pitstopName\"\n                        />\n                        <textarea\n                            placeholder=\"Notes\"\n                            rows=\"8\"\n                            [(ngModel)]=\"pitstopNotes\"\n                            name=\"pitstopNotes\"\n                        ></textarea>\n                        <div class=\"range\">\n                            internet speed : {{ internetValue }}\n                            <input\n                                type=\"range\"\n                                min=\"0\"\n                                max=\"5\"\n                                [(ngModel)]=\"internetSpeed\"\n                                name=\"internetSpeed\"\n                                (input)=\"onInternetSpeedChange($event)\"\n                            />\n                        </div>\n                        <button class=\"button primary\">Add Pitstop</button>\n                    </form>\n                </ng-template>\n            </ng-template>\n        </ng-template>\n    </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Point } from '@agm/core/services/google-maps-types';\nimport { PitstopService } from '../../services/pitstop/pitstop.service';\nimport { Pitstop } from '../../interfaces/pitstop';\n@Component({\n  selector: 'app-adder',\n  templateUrl: './adder.component.html',\n  styleUrls: ['./adder.component.less']\n})\nexport class AdderComponent implements OnInit {\n  modifier = '';\n  adderIcon = '+';\n  open = false;\n  loggedIn = true;\n  expanded = false;\n\n  pitstopName = '';\n  pitstopNotes = '';\n\n  internetSpeed = 3;\n  internetValue = 'Good';\n\n  @Output()\n  adding: EventEmitter<Boolean> = new EventEmitter();\n  @Output()\n  add: EventEmitter<Boolean> = new EventEmitter();\n  @Input()\n  point: Pitstop;\n\n  constructor(private router: Router, private pitstopService: PitstopService) {}\n\n  ngOnInit() {\n  }\n\n  toggleAdder(event) {\n    if (this.open) {\n      this.modifier = '';\n      this.adderIcon = '+';\n      this.open = false;\n      this.adding.emit(false);\n    } else if (!this.open) {\n      this.modifier = 'open';\n      this.adderIcon = '-';\n      this.open = true;\n      this.adding.emit(true);\n    }\n    this.expanded = false;\n  }\n  expandAdder(event) {\n    this.modifier = 'open expand';\n    this.expanded = true;\n  }\n  onLogin() {\n    this.router.navigate(['/login']);\n  }\n  onSignup() {\n    this.router.navigate(['/signup']);\n  }\n  onInternetSpeedChange(event) {\n    console.log(event.target.value);\n    this.internetValue = this.internetWords(event.target.value);\n    console.log(this.internetValue);\n  }\n  onAddPitstop() {\n      console.log('point', this.point)\n      var pitstop:Pitstop = {\n          name: this.pitstopName,\n          notes: this.pitstopNotes,\n          connection: this.internetSpeed,\n          longitude: this.point.longitude,\n          latitude: this.point.latitude,\n          id: null,\n      }\n      this.modifier = '';\n      this.expanded = false;\n      this.open = false;\n      this.adderIcon = '+';\n      this.adding.emit(false);\n      this.pitstopService.addPitstop(pitstop).subscribe(function() {\n          this.add.emit(true);\n      }.bind(this))\n  }\n  internetWords(val) {\n    let out: string;\n    switch (val) {\n      case '0':\n        out = 'Awful';\n        break;\n\n      case '1':\n        out = 'Very Bad';\n        break;\n\n      case '2':\n        out = 'bad';\n        break;\n\n      case '3':\n        out = 'Good';\n        break;\n\n      case '4':\n        out = 'very good';\n        break;\n      default:\n        out = 'Excellent';\n        break;\n    }\n    return out;\n  }\n}\n","<div class=\"blog\">\r\n    <div class=\"social-bar\">\r\n        <!-- <app-social-share></app-social-share> -->\r\n        \r\n    </div>\r\n    <div class=\"content\">\r\n        <h1 class=\"title\">{{ title }}</h1>\r\n        <h3 class=\"date\">{{ date }}</h3>\r\n        <h3 class=\"__text-sub\">{{author}}</h3>\r\n        <app-social-share></app-social-share>\r\n        <div class=\"body\" [innerHTML]=\"content\"></div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BlogService } from '../../../services/blog/blog.service';\r\nimport * as moment from 'moment';\r\nimport { Meta } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'app-blog',\r\n    templateUrl: './blog.component.html',\r\n    styleUrls: ['./blog.component.less']\r\n})\r\nexport class BlogComponent implements OnInit {\r\n    title: String;\r\n    author: String;\r\n    content: String;\r\n    date: String;\r\n    snippet: 'lorem ipsum'\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private blogService: BlogService,\r\n        private meta: Meta,\r\n        private router: Router\r\n    ) {\r\n        // this.moment = moment.Moment = moment('')\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getBlog();\r\n        // this.moment = moment();\r\n    }\r\n    getBlog() {\r\n        if(!this.route)return;\r\n        this.route.params.subscribe(params => {\r\n            this.blogService.getBlog(params.id).subscribe(data => {\r\n                this.title = data.info.title;\r\n                this.author = data.info.author;\r\n                this.content = data.content;\r\n                console.log('params', this.router.url)\r\n                this.setTags()\r\n            });\r\n            // console.log('route params', moment(data.info.datePublished));\r\n        });\r\n    }\r\n    setTags() {\r\n        this.meta.addTag({name:'og:title', content: String(this.title)});\r\n        this.meta.addTag({name:'og:description', content: String(this.snippet)});\r\n        this.meta.addTag({name:'og:url', content: String(`https://nomadpitstops.com${this.router.url}`)});\r\n        \r\n        this.meta.addTag({name:'twitter:title', content: String(this.title)});\r\n        this.meta.addTag({name:'twitter:description', content: String(this.snippet)});\r\n        this.meta.addTag({name:'og:url', content: String(`https://nomadpitstops.com${this.router.url}`)});\r\n    }\r\n}\r\n","<div class=\"body\">\r\n    <div class=\"head themed-text shadow-text\">\r\n        <h1 class=\"title\">- Blog -</h1>\r\n    </div>\r\n    <div class=\"posts\">\r\n        <a class=\"post\" *ngFor=\"let post of posts\" routerLink=\"{{ post.id }}\">\r\n            <div class=\"image\"><img src=\"{{ post.thumbnail }}\" alt=\"\" /></div>\r\n            <div class=\"title\">\r\n                <p class=\"__text-heading text-title\">{{ post.title }}</p>\r\n                <div class=\"__text description\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    Quidem, dolorum, quia impedit quam quod placeat, blanditiis\r\n                    error iste dolore nobis consequuntur doloribus quasi dolorem\r\n                    fugiat voluptatibus reprehenderit eligendi saepe. Error.\r\n                </div>\r\n                <p class=\"__text-sub readmore\">Read More</p>\r\n            </div>\r\n        </a>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BlogService } from '../../services/blog/blog.service';\r\n\r\n@Component({\r\n    selector: 'app-blogs',\r\n    templateUrl: './blogs.component.html',\r\n    styleUrls: ['./blogs.component.less']\r\n})\r\nexport class BlogsComponent implements OnInit {\r\n\r\n    posts = [1,2,3,4,5,6,7,8,9,0,1,2,3,4,4,5,6,7,]\r\n\r\n    constructor(private blogService: BlogService) {}\r\n\r\n    ngOnInit() {\r\n        this.getPosts();\r\n    }\r\n    getPosts() {\r\n        this.blogService.getBlogs()\r\n            .subscribe((data:any) => {\r\n                console.log('ok')\r\n                this.posts = data.posts;\r\n            })\r\n    }\r\n}\r\n","<div class=\"main\">\n    <div class=\"pitstops\">\n        <app-near></app-near>\n    </div>\n    <div class=\"blog\">\n        <h1 class=\"__text-heading blog-heading\">Recent Blog Posts</h1>\n        <a\n            *ngFor=\"let blog of blogs\"\n            class=\"post __card __hoverable\"\n            routerLink=\"blog/{{ blog.id }}\"\n        >\n\n            <h2 class=\"__text-heading\">{{ blog.title }}</h2>\n            <p class=\"__text snippet\">\n                Lorem, ipsum dolor sit amet consectetur adipisicing elit.\n                Maiores voluptate est minima, porro alias voluptatibus rerum\n                reiciendis error sapiente velit animi beatae soluta architecto\n                quos vitae distinctio nostrum possimus nulla?\n            </p>\n            <p class=\"__text-sub sub\">Read More</p>\n        </a>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { BlogService } from '../../services/blog/blog.service';\r\nimport { Router } from '@angular/router';\r\nimport { Meta } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'app-landing',\r\n    templateUrl: './landing.component.html',\r\n    styleUrls: ['./landing.component.less']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n    blogs: Array<Object>;\r\n    constructor(\r\n        private blogService: BlogService,\r\n        private router: Router,\r\n        private meta: Meta\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.meta.addTag({ name: 'description', content: '' });\r\n        this.getBlogs();\r\n    }\r\n\r\n    getBlogs() {\r\n        this.blogService.getBlogs().subscribe((data: any) => {\r\n            this.blogs = data.posts;\r\n        });\r\n    }\r\n    onRouteBlogPost(e, id) {\r\n        this.router.navigate([`/blog/${id}`]);\r\n    }\r\n}\r\n","<div class=\"login-page\">\n    <div class=\"form\"> \n      <form class=\"login-form\" (ngSubmit)=\"onLoginSubmit()\">\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Username\"/>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Password\"/>\n        <button class=\"button primary\">login</button>\n        <p class=\"message\">Not registered? <a routerLink=\"/signup\">Create an account</a></p>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../interfaces/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user: any = {\n      username: this.username,\n      password: this.password,\n    };\n  }\n\n}\n","<div class=\"main\">\r\n    <app-near></app-near>\r\n    <!-- <div></div> -->\r\n    <div class=\"col\">\r\n            <agm-map\r\n            [latitude]=\"latitude\"\r\n            [longitude]=\"longitude\"\r\n            [streetViewControl]=\"false\"\r\n            [zoomControl]=\"false\"\r\n            [zoom]=\"15\"\r\n            (mapClick)=\"onChooseLocation($event)\"\r\n        >\r\n            <app-pitstop\r\n                *ngFor=\"let marker of markers\"\r\n                [marker]=\"marker\"\r\n            ></app-pitstop>\r\n            <agm-marker\r\n                *ngIf=\"point\"\r\n                [latitude]=\"point.latitude\"\r\n                [longitude]=\"point.longitude\"\r\n            ></agm-marker>\r\n        </agm-map>\r\n\r\n        <app-adder\r\n            (adding)=\"toggleAdding($event)\"\r\n            [point]=\"point\"\r\n            (add)=\"addPitstops()\"\r\n        ></app-adder>\r\n    </div>\r\n\r\n    <!-- <div class=\"near\"><app-near></app-near></div>\r\n    <div class=\"map\">\r\n        <div class=\"col\">\r\n            <app-adder\r\n                (adding)=\"toggleAdding($event)\"\r\n                [point]=\"point\"\r\n                (add)=\"addPitstops()\"\r\n            ></app-adder>\r\n        </div>\r\n        <agm-map\r\n            [latitude]=\"latitude\"\r\n            [longitude]=\"longitude\"\r\n            [streetViewControl]=\"false\"\r\n            [zoomControl]=\"false\"\r\n            [zoom]=\"15\"\r\n            (mapClick)=\"onChooseLocation($event)\"\r\n        >\r\n            <app-pitstop\r\n                *ngFor=\"let marker of markers\"\r\n                [marker]=\"marker\"\r\n            ></app-pitstop>\r\n            <agm-marker\r\n                *ngIf=\"point\"\r\n                [latitude]=\"point.latitude\"\r\n                [longitude]=\"point.longitude\"\r\n            ></agm-marker>\r\n        </agm-map>\r\n    </div> -->\r\n</div>\r\n\r\n<!-- <agm-map\r\n            [latitude]=\"latitude\"\r\n            [longitude]=\"longitude\"\r\n            [streetViewControl]=\"false\"\r\n            [zoomControl]=\"false\"\r\n            [zoom]=\"15\"\r\n            (mapClick)=\"onChooseLocation($event)\"\r\n        ></agm-map> -->\r\n","import { WINDOW } from '@ng-toolkit/universal';\r\nimport { Component, OnInit, Output, EventEmitter, ViewChild , Inject} from '@angular/core';\r\nimport { User } from '../../interfaces/user';\r\nimport { Point } from '../../interfaces/point';\r\nimport { PitstopService } from '../../services/pitstop/pitstop.service';\r\nimport { Pitstop } from '../../interfaces/pitstop';\r\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-map',\r\n    templateUrl: './map.component.html',\r\n    styleUrls: ['./map.component.less']\r\n})\r\nexport class MapComponent implements OnInit {\r\n    latitude = 51.678418;\r\n    longitude = 7.809007;\r\n\r\n    markerPlaced = false;\r\n    defaultUI = false;\r\n    isMarkerPlaceable = false;\r\n\r\n    markers: Array<Pitstop>;\r\n    point: Point;\r\n\r\n    ngOnInit() {\r\n        console.log('hello!')\r\n        this.addPitstops();\r\n        this.router.params.subscribe(data => {\r\n            if(data.id) this.goToPitstop(data.id);\r\n        });\r\n    }\r\n    constructor(@Inject(WINDOW) private window: Window, private pitstopService: PitstopService, private router: ActivatedRoute) {\r\n        // navigator = window.navigator;\r\n        navigator.geolocation.getCurrentPosition(\r\n            function(position) {\r\n                this.setScreenPosition(position.coords.longitude, position.coords.latitude)\r\n                return position;\r\n            }.bind(this)\r\n        );\r\n    }\r\n    onChooseLocation(e) {\r\n        if (this.isMarkerPlaceable) {\r\n            this.point = {\r\n                longitude: e.coords.lng,\r\n                latitude: e.coords.lat\r\n            };\r\n        }\r\n    }\r\n    toggleAdding(e) {\r\n        this.isMarkerPlaceable = e;\r\n    }\r\n    addPitstops() {\r\n        let pitstops = this.pitstopService.getPitstops().subscribe((data:any) => {\r\n            this.markers = data;\r\n        });\r\n    }\r\n    setScreenPosition(longitude, latitude) {\r\n        this.longitude = longitude;\r\n        this.latitude = latitude;\r\n    }\r\n    goToPitstop(id) {\r\n        this.pitstopService.getPitstopById(id).subscribe(data => {\r\n            this.setScreenPosition(data.longitude, data.latitude);\r\n        });\r\n    }\r\n}\r\n","<div class=\"wrap themed-text\">\r\n    <nav class=\"navbar\">\r\n        <div class=\"logo\">\r\n            <a routerLink=\"/\"\r\n                ><span class=\"title\">Nomad Pit Stops</span>\r\n                <img class=\"img\" src=\"../../../assets/svg/mountains.svg\" alt=\"\"\r\n            /></a>\r\n        </div>\r\n        <div class=\"menu\">\r\n            <div class=\"hamberger\" (click)=\"onClickHamberger($event)\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"links {{ linksState }} __text\" [@openItems]>\r\n            <div class=\"link\"><a routerLink=\"/blog\">Blog</a></div>\r\n            <div class=\"link\"><a routerLink=\"/map\">Map</a></div>\r\n            <div class=\"link\"><a routerLink=\"/about\">About</a></div>\r\n            <div class=\"link\"><a routerLink=\"nearme\" class=\"near\">Nearby</a></div>\r\n            <!-- <li>\r\n                <a routerLink=\"/login\"\r\n                    >Log In</a\r\n                >\r\n            </li>\r\n            <li>\r\n                <a\r\n                    routerLink=\"/login\"\r\n                    >Log Out</a\r\n                >\r\n            </li> -->\r\n        </div>\r\n    </nav>\r\n</div>\r\n","import { WINDOW } from '@ng-toolkit/universal';\r\nimport { Component, OnInit, Output, EventEmitter , Inject} from '@angular/core';\r\nimport { trigger, transition, style, animate, group } from '@angular/animations';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.less'],\r\n  animations: [\r\n    trigger('openItems',[\r\n      transition(':enter', [\r\n        style({right: '-250px'}),\r\n        animate(200)\r\n      ]),\r\n      transition(':leave', [\r\n        group([\r\n          animate('0.2s ease', style({\r\n            right: '-250px'\r\n          })),\r\n        ])\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  linksVisible = false;\r\n  linksState = 'close'\r\n  @Output() adding: EventEmitter<boolean> = new EventEmitter();\r\n  constructor(@Inject(WINDOW) private window: Window) {\r\n    if (window.innerWidth > 600) {\r\n      this.linksVisible = true;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onClickHamberger(e) {\r\n    this.linksVisible = !this.linksVisible;\r\n    if (this.linksState === 'open') {\r\n        this.linksState = 'close'\r\n    } else {\r\n        this.linksState = 'open'\r\n    }\r\n  }\r\n  onAdding(e) {\r\n    this.adding.emit(e);\r\n  }\r\n\r\n}\r\n","<div class=\"wrap\">\r\n    <input\r\n        *ngIf=\"locationFinder\"\r\n        ngx-google-places-autocomplete\r\n        [options]=\"options\"\r\n        #placesRef=\"ngx-places\"\r\n        (onAddressChange)=\"handleAddressChange($event)\"\r\n        class=\"places\"\r\n    />\r\n    <div class=\"cards\">\r\n        <div class=\"nearby\" *ngFor=\"let pitstop of pitstops\">\r\n            <app-nearcard [pitstop]=\"pitstop\"></app-nearcard>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\r\nimport { PitstopService } from '../../services/pitstop/pitstop.service';\r\nimport { Pitstop } from '../../interfaces/pitstop';\r\n\r\n@Component({\r\n    selector: 'app-near',\r\n    templateUrl: './near.component.html',\r\n    styleUrls: ['./near.component.less']\r\n})\r\nexport class NearComponent implements OnInit {\r\n    @ViewChild('placesRef') placesRef: GooglePlaceDirective;\r\n    pitstops: Array<Pitstop>;\r\n\r\n    @Input('locationFinder') locationFinder: Boolean;\r\n    options = {};\r\n    longitude: Number;\r\n    latitude: Number;\r\n\r\n    constructor(private pitStopServerice: PitstopService) {}\r\n\r\n    ngOnInit() {\r\n        navigator.geolocation.getCurrentPosition(\r\n            function(position) {\r\n                this.longitude = position.coords.longitude;\r\n                this.latitude = position.coords.latitude;\r\n                this.getPitstops()\r\n                return position;\r\n            }.bind(this)\r\n        );\r\n    }\r\n\r\n    handleAddressChange(event) {}\r\n\r\n    getPitstops() {\r\n        this.pitStopServerice.getNearPitstops({\r\n            longitude: this.longitude,\r\n            latitude: this.latitude,\r\n            radius: 5,\r\n        })\r\n        .subscribe((data:Array<Pitstop>) => {\r\n            this.pitstops = data;\r\n        })\r\n        // this.pitStopServerice.getPitstops().subscribe(data => {\r\n        //     this.pitstops = data;\r\n        //     this.pitstops.map(data => {\r\n        //         console.log(data.id)\r\n        //     })\r\n        //     console.log('got these gosh darn pitstops', this.pitstops)\r\n        // });\r\n\r\n    }\r\n}\r\n","<div class=\"__card __card-reactive __hoverable near-card\" (click)=\"onClick()\" (touchstart)=\"onClick()\">\n    <p class=\"name __text-heading\">{{name}}</p>\n    <p class=\"__text-sub\">Internet: {{connection}}</p>\n    <p class=\"__text\">{{notes}}</p>\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PitstopService } from '../../../services/pitstop/pitstop.service';\r\nimport { Pitstop } from '../../../interfaces/pitstop';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-nearcard',\r\n    templateUrl: './nearcard.component.html',\r\n    styleUrls: ['./nearcard.component.less']\r\n})\r\nexport class NearcardComponent implements OnInit {\r\n    name: String;\r\n    connection: String;\r\n    notes: String;\r\n    id: String;\r\n\r\n    @Input('pitstop') pitstop: Pitstop;\r\n\r\n    constructor(private pitstopServerice: PitstopService, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.name = this.pitstop.name;\r\n        this.connection = this.pitstopServerice.internetWords(this.pitstop.connection);\r\n        this.notes = this.pitstop.notes;\r\n        this.id = this.pitstop.id;\r\n        console.log('somthings been created')\r\n    }\r\n    onClick() {\r\n        this.router.navigateByUrl('/pitstops/map/'+this.id);\r\n        console.log('ive been clicked')\r\n    }\r\n}\r\n","<agm-marker [latitude]=\"marker.latitude\" [longitude]=\"marker.longitude\" [openInfoWindow]=\"true\">\n    <agm-info-window>\n        <h2>{{marker.name}}</h2>\n        <p>Internet Connection: {{getWords(marker)}}</p>\n        <p *ngIf=\"marker.notes\">Notes: {{marker.notes}}</p>\n    </agm-info-window>\n</agm-marker>","import { Component, OnInit, Input } from '@angular/core';\nimport { Pitstop } from '../../interfaces/pitstop';\nimport { PitstopService } from '../../services/pitstop/pitstop.service';\n\n@Component({\n    selector: 'app-pitstop',\n    templateUrl: './pitstop.component.html',\n    styleUrls: ['./pitstop.component.less']\n})\nexport class PitstopComponent implements OnInit {\n    @Input()\n    marker: Pitstop;\n    constructor(private pitstopService: PitstopService) {}\n\n    ngOnInit() {}\n\n    getWords(marker) {\n        return this.pitstopService.internetWords(marker.connection)\n    }\n}\n","<div class=\"signup-page\">\n    <form class=\"login-form\" (ngSubmit)=\"onSignupSubmit()\">\n      <input class=\"email\"type=\"text\"  [(ngModel)]=\"email\" name=\"emil\" placeholder=\"email\">\n      <input class=\"username\"type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Username\"/>\n      <input class=\"password\"type=\"password\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Password\"/>\n      <input class=\"repeat\"type=\"password\"[(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"Confirm Password\">\n      <button class=\"button primary submit\">Sign up</button>\n      <!-- <p class=\"message\">Not registered? <a routerLink=\"/signup\">Create an account</a></p> -->\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../interfaces/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.less']\n})\nexport class SignupComponent implements OnInit {\n  email;\n  username;\n  password;\n  confirmPassword;\n  user: User;\n\n  constructor( private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSignupSubmit() {\n    this.user = {\n      email: this.email,\n      username: this.username,\n      password: this.password,\n    };\n  }\n\n}\n","<div class=\"container themed-text\">\r\n    <div class=\"btn twitter\" (click)=\"onTweet()\">\r\n        <i class=\"fab fa-twitter\"></i>\r\n        <div class=\"content\">Tweet</div>\r\n    </div>\r\n    <div class=\"btn facebook\"  (click)=\"shareToFacebook()\">\r\n        <i class=\"fab fa-facebook-f\"></i>\r\n        <div class=\"content\">Post</div>\r\n    </div>\r\n    <!-- <a href=\"https://twitter.com/intent/tweet?button_hashtag=LoveTwitter&ref_src=twsrc%5Etfw\" class=\"twitter-hashtag-button\" data-show-count=\"false\">Tweet #LoveTwitter</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> -->\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { WINDOW } from '@ng-toolkit/universal';\r\nimport { Router } from '@angular/router';\r\n// import shareFacebook = require('share-facebook');\r\nimport * as shareFacebook from 'share-facebook';\r\n\r\n@Component({\r\n    selector: 'app-social-share',\r\n    templateUrl: './social-share.component.html',\r\n    styleUrls: ['./social-share.component.less']\r\n})\r\nexport class SocialShareComponent implements OnInit {\r\n    constructor(\r\n        @Inject(WINDOW) private window: Window,\r\n        private router: Router\r\n    ) {}\r\n\r\n    ngOnInit() {}\r\n    shareToFacebook() {\r\n        this.window.open(\r\n            'https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fnomadpitstops.com' +\r\n                this.router.url,\r\n            'Facebook Share',\r\n            'height=450, width=550'\r\n        );\r\n        if (this.window) {\r\n        }\r\n    }\r\n    onTweet() {\r\n        var url = 'https://twitter.com/intent/tweet';\r\n        var text = 'https://nomadpitstops.com'+this.router.url +' #digitalnomad';\r\n        var hashtag = '#nomadpitstops';\r\n        var via = 'username';\r\n        this.window.open(\r\n            url + '?text=' + text + ';hastag=' + hashtag + ';via=' + via,\r\n            'Twitter',\r\n            'height=450, width=550'\r\n        );\r\n    }\r\n}\r\n","import { WINDOW } from '@ng-toolkit/universal';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { environment } from './../../../environments/environment';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n    serverURL;\r\n    httOptions;\r\n    constructor(\r\n        @Inject(WINDOW) private window: Window,\r\n        private http: HttpClient\r\n    ) {\r\n        this.serverURL = environment.serverUrl;\r\n        this.httOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n    }\r\n    getBlogs() {\r\n        return new Observable(observer => {\r\n            const { next, error, complete } = observer;\r\n            if (this.window.localStorage) {\r\n                var blogs = JSON.parse(\r\n                    this.window.localStorage.getItem('blogs')\r\n                );\r\n                if (blogs) observer.next(blogs);\r\n            }\r\n\r\n            this.http\r\n                .get<Array<any>>(this.serverURL + '/blog', this.httOptions)\r\n                .pipe(map((res: any) => res))\r\n                .subscribe(data => {\r\n                    try {\r\n                        this.window.localStorage.setItem(\r\n                            'blogs',\r\n                            JSON.stringify(data)\r\n                        );\r\n                    } catch (error) {}\r\n\r\n                    observer.next(data);\r\n                });\r\n        });\r\n        // return this.http\r\n        //     .get<Array<any>>(this.serverURL + '/blog', this.httOptions)\r\n        //     .pipe(map((res: any) => res));\r\n    }\r\n    getBlogFromStorage(id) {\r\n        if (this.window.localStorage) {\r\n            \r\n        }\r\n        var blog = JSON.parse(this.window.localStorage.getItem(`blog:${id}`));\r\n        console.log('blog', blog);\r\n        return blog;\r\n    }\r\n    getBlog(id: String) {\r\n        return this.http\r\n            .get<Object>(this.serverURL + '/blog/' + id, this.httOptions)\r\n            .pipe(\r\n                map((res: any) => {\r\n                    return res;\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { WINDOW } from '@ng-toolkit/universal';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Pitstop } from '../../interfaces/pitstop';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PitstopService {\r\n    httpOptions: Object;\r\n    constructor(@Inject(WINDOW) private window: Window, private http: HttpClient) {\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n    }\r\n\r\n    addPitstop(pitstop: Pitstop) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n        return this.http\r\n            .post<Pitstop>(\r\n                environment.serverUrl + '/pitstops',\r\n                pitstop,\r\n                httpOptions\r\n            )\r\n            .pipe(map((res: any) => res));\r\n    }\r\n\r\n    getPitstops() {\r\n        return new Observable(observer => {\r\n            if (this.window.localStorage.getItem('pitstops')) {\r\n                observer.next(JSON.parse(this.window.localStorage.getItem('pitstops')));\r\n            }\r\n            this.http\r\n                .get<Array<Pitstop>>(\r\n                    environment.serverUrl + '/pitstops',\r\n                    this.httpOptions\r\n                )\r\n                .pipe(map((res: any) => res))\r\n                .subscribe(data => {\r\n                    this.window.localStorage.setItem('pitstops', JSON.stringify(data));\r\n                    observer.next(data);\r\n                });\r\n        });\r\n    }\r\n    getPitstopById(id) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        };\r\n        return this.http\r\n            .get<Pitstop>(\r\n                environment.serverUrl + '/pitstops/' + id,\r\n                httpOptions\r\n            )\r\n            .pipe(map((res: any) => res));\r\n    }\r\n    getNearPitstops(options) {\r\n        return new Observable(observer => {\r\n            if (this.window.localStorage.getItem('pitstops:near')) {\r\n                observer.next(JSON.parse(this.window.localStorage.getItem('pitstops:near')));\r\n            }\r\n            this.http\r\n                .post<Array<Pitstop>>(\r\n                    environment.serverUrl + '/pitstops/radius/',\r\n                    options,\r\n                    this.httpOptions\r\n                )\r\n                .pipe(map(res => res))\r\n                .subscribe(data => {\r\n                    this.window.localStorage.setItem('pitstops:near', JSON.stringify(data));\r\n                    observer.next(data);\r\n                })\r\n        });\r\n    }\r\n    internetWords(val) {\r\n        let out: string;\r\n        switch (val) {\r\n            case '0':\r\n                out = 'Awful';\r\n                break;\r\n\r\n            case '1':\r\n                out = 'Very Bad';\r\n                break;\r\n\r\n            case '2':\r\n                out = 'bad';\r\n                break;\r\n\r\n            case '3':\r\n                out = 'Good';\r\n                break;\r\n\r\n            case '4':\r\n                out = 'very good';\r\n                break;\r\n            default:\r\n                out = 'Excellent';\r\n                break;\r\n        }\r\n        return out;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    serverUrl: 'http://localhost:3001',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\n    import { environment } from './environments/environment';\n    \n    if (environment.production) {\n      enableProdMode();\n    }\n    \n    export {AppServerModule} from './app/app.server.module';\n    ","module.exports = require(\"@agm/core/core.module\");","module.exports = require(\"@agm/core/directives/info-window\");","module.exports = require(\"@agm/core/directives/map\");","module.exports = require(\"@agm/core/directives/marker\");","module.exports = require(\"@agm/core/services/fit-bounds\");","module.exports = require(\"@agm/core/services/google-maps-api-wrapper\");","module.exports = require(\"@agm/core/services/managers/circle-manager\");","module.exports = require(\"@agm/core/services/managers/data-layer-manager\");","module.exports = require(\"@agm/core/services/managers/info-window-manager\");","module.exports = require(\"@agm/core/services/managers/kml-layer-manager\");","module.exports = require(\"@agm/core/services/managers/marker-manager\");","module.exports = require(\"@agm/core/services/managers/polygon-manager\");","module.exports = require(\"@agm/core/services/managers/polyline-manager\");","module.exports = require(\"@agm/core/services/managers/rectangle-manager\");","module.exports = require(\"@agm/core/services/maps-api-loader/lazy-maps-api-loader\");","module.exports = require(\"@agm/core/services/maps-api-loader/maps-api-loader\");","module.exports = require(\"@agm/core/utils/browser-globals\");","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@ng-toolkit/universal\");","module.exports = require(\"@nguniversal/common\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"ngx-google-places-autocomplete\");","module.exports = require(\"ngx-google-places-autocomplete/ngx-google-places-autocomplete.directive\");","module.exports = require(\"ngx-google-places-autocomplete/ngx-google-places-autocomplete.module\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");"],"sourceRoot":""}